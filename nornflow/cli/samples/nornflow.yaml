# This file is a sample of NornFlow settings. Alter it as needed to fit your project's requirements.
# You can create your own '<something>.yaml' file in the root of your project, keeping in mind that 
# NornFlow will try to find a settings YAML file through the following order:
# 1. The path specified in the environment variable 'NORNFLOW_SETTINGS'
# 2. The path passed to NornFlowSettings initializer (meaning using the 'nornflow --settings <path> ...')
# 3. The path 'nornflow.yaml' in the root of the project

######################
# MANDATORY SETTINGS #
######################

# Path for Nornir's config file
nornir_config_file: "nornir_configs/config.yaml"

######################
# OPTIONAL SETTINGS  #
######################

# List of paths to directories containing the Nornir tasks to be included in NornFlow's task_catalog. It
# defaults to a 'tasks' directory in the root of the project. The search is recursive, meaning that all 
# subdirectories will be searched as well.
local_tasks_dirs:
  - "tasks"

# List of paths to directories containing the Nornir tasks to be included in NornFlow's task_catalog. It
# defaults to a 'workflows' directory in the root of the project. The search is recursive, meaning that 
# all subdirectories will be searched as well. Be aware that all files with a .yaml or .yml extension will be
# considered as workflows.
local_workflows_dirs:
  - "workflows"

# List of paths to directories containing the Nornir filters to be included in NornFlow's filter_catalog. It
# defaults to a 'filters' directory in the root of the project. The search is recursive, meaning that all
# subdirectories will be searched as well.
local_filters_dirs:
  - "filters"

# List of python packages installed to your environment that contain Nornir tasks and Filter functions to be included in NornFlow's catalogs.
imported_packages: []

# If set to True, NornFlow will invoke Nornir in dry-run mode
dry_run: False

# List of Nornir processor configurations to be applied during task/workflow execution.
# If not provided, NornFlow will default to using only the DefaultNornFlowProcessor
# which takes no arguments.
#
# Structure:
#   - dotted_path: Full Python import path to the processor class
#     args: Dictionary of keyword arguments passed to the processor constructor
#
# IMPORTANT: If you specify custom processors, the DefaultNornFlowProcessor will NOT
# be automatically included - you must explicitly add it if you still want its functionality.
#
# NOTE: Workflow files can define their own 'processors' section with the same structure.
# Workflow-level processor configurations will OVERRIDE this global configuration (not merge with it).
processors:
  - dotted_path: "nornflow.processors.DefaultNornFlowProcessor"
